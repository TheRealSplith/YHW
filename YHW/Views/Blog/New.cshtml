@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_LayoutHiddenTwitter.cshtml";
}

@using (Html.BeginForm("New", "Blog", FormMethod.Post,
                            new
                            {
                              Class = "form-horizontal",
                              role = "form",
                              enctype = "multipart/form-data"
                            }))
{
  <div class="row" style="padding-bottom:10px; padding-top:10px;">
    <div class="" data-bind="css: { 'has-error': !Title.isValid() && Title.isModified() }">
      <div class="form-group">
        <label for="inputTitle" class="col-xs-offset-1 col-xs-2 col-sm-2 control-label">Title</label>
        <div class="col-xs-offset-1 col-sm-offset-0 col-xs-7 col-sm-8 col-md-8">
          <input data-bind="value: Title" class="form-control" name="Title" id="inputTitle" placeholder="Title" />
          <span class="help-block" data-bind="validationMessage: Title"></span>
        </div>
      </div>
    </div>
    <div class="" data-bind="css: { 'has-error': !BlogText.isValid() && BlogText.isModified() }">
      <div class="form-group">
        <label for="inputSubText" class="col-xs-offset-1 col-xs-2 col-sm-2 control-label">Blog Text</label>
        <div class="col-xs-offset-1 col-sm-offset-0 col-xs-7 col-sm-8 col-md-8">
          <textarea data-bind="value: BlogText" class="form-control" name="BlogText" id="inputSubText" placeholder="Body of Blog Post"></textarea>
          <span class="help-block" data-bind="validationMessage: BlogText"></span>
        </div>
      </div>
    </div>
    <div class="form-group">
      <label for="inputSubText" class="col-xs-offset-1 col-xs-2 col-sm-2 control-label">Image Sub Text</label>
      <div class="col-xs-offset-1 col-sm-offset-0 col-xs-7 col-sm-8 col-md-8">
        <input class="form-control" name="ImageSubText" id="imageSubText" placeholder="Text that appears under Large Image">
        <span class="help-block"></span>
      </div>
    </div>
    <div class="form-group">
      <label for="inputOpinion" class="col-xs-offset-1 col-xs-2 col-sm-2 control-label">Opinion</label>
      <div class="col-xs-offset-1 col-sm-offset-0 col-sm-4 col-md-4">
        <input type="checkbox" name="IsOpinion" id="IsOpinion" data-bind="checked: Opinion" />
      </div>
    </div>
    <div class="form-group">
      <label class="col-xs-offset-1 col-sm-2 control-label" for="ThumbURL">Thumbnail</label>
      <input type="file" name="ThumbFile" id="ThumbFile" data-filename-placement="inside" />
      <span>JPG or PNG, 64 x 64 pixels</span>
    </div>
    <div class="form-group">
      <label class="col-xs-offset-1 col-sm-2 control-label" for="ThumbURL">Large Image</label>
      <input type="file" name="LargeFile" id="LargeFile" data-filename-placement="inside" />
      <span>JPG or PNG, 1000 wide by 600 tall pixels</span>
    </div>
    <div class="form-group">
      <label class="col-xs-offset-1 col-sm-2 control-label" for="ThumbURL">Small Image</label>
      <input type="file" name="SmallFile" id="SmallFile" data-filename-placement="inside" />
      <span>JPG or PNG, 256 x 256 pixels</span>
    </div>
    <div class="form-group">
      <label class="col-xs-offset-1 col-sm-2 control-label" for="ThumbURL">Facebook Image</label>
      <input type="file" name="FBFile" id="FBFile" data-filename-placement="inside" />
      <span>JPG or PNG, 377 width x 196 height</span>
    </div>
    <div class="col-md-offset-3 col-sm-offset-3 col-xs-offset-1">
      <button class="btn btn-default" data-bind="enable: validationModel.isValid()">Submit</button>
    </div>
  </div>
}

@section scripts {
  <script type="text/javascript">
    function FeedbackFormVM() {
      var self = this;
      this.Title = ko.validatedObservable("").extend({ required: true });
      this.BlogText = ko.validatedObservable("").extend({ required: true });
      this.Opinion = ko.validatedObservable(true);
      this.ImageSubText = ko.observable("");

      this.validationModel = ko.validatedObservable({
        title: self.Title,
        subText: self.BlogText
      });

      this.Submit = function () {
        $.post(
          "@Url.Action("New", "Blog")",
          {
            ID: -1, ThumbURL: "", ImageURL: "", Title: self.Title(), SubText: null, BlogText: self.BlogText(),
            CreatedDate: null, AuthorID: null, IsOpinion: self.Opinion()
          },
          function (data) {
            if (data.Success == true)
              window.location.href = data.Redirect;
          }).error(function () {
            console.log("Error");
          });
      };
    }

    ko.validation.configure({
      registerExtenders: true,
      insertMessages: false
    });
    ko.validation.init({ messagesOnModified: false, grouping: { deep: true, observable: true } });

    // init
    var vm = new FeedbackFormVM();
    ko.applyBindings(vm);
  </script>

@Scripts.Render("~/Scripts/bootstrap.file-input.js")
<script type="text/javascript">
  $('input[type=file]').bootstrapFileInput();
</script>
}
